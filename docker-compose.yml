version: "3.6"
services:
  flask_app:
    links:
      - 'postgres'
    depends_on:
      - postgres
    container_name: flask_app
    restart: always
    # restart: unless-stopped
    build: ./flask_app
    ports:
      - "5000:5000"
    # command:  bash -c "gunicorn -w 1 -b 0.0.0.0:5000 run:app"
    expose: 
    - 5000
    entrypoint: ./entrypoint.sh
    volumes:
    - ./app/:/usr/src/app/
    - ./migrations:/usr/src/app/migrations

  nginx:
    # container_name: nginx
    restart: always
    # restart: unless-stopped
    # build: ./nginx
    image: nginx:1.18
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - flask_app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


  postgres:
    image: 'postgres:latest'
    restart: always
    # restart: unless-stopped
    volumes:
      - './data:/var/lib/postgresql/flask_app/data/'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=entrega0
    ports:
      - '5432:5432'

